{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Subscriber",
            "range": [
              9,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Subscriber",
            "range": [
              9,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            9,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../Subscriber",
        "raw": "'../Subscriber'",
        "range": [
          27,
          42
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 27
          },
          "end": {
            "line": 1,
            "column": 42
          }
        }
      },
      "range": [
        0,
        43
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 43
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * 将 {@link Notification} 对象的 Observable 转换成它们所代表的发送。\n *\n * <span class=\"informal\">将 {@link Notification} 对象拆开成实际的 `next`、\n * `error` 和 `complete` 发送。它与 {@link materialize} 是相反的。</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` 被假定用来操作只发送值为 {@link Notification} 对象的 `next`，\n * 不发送 `error` 的 Observable 。这样的 Obseravble 其实是 `materialize`\n * 操作符的输出。然后这些通知会使用它们所包含的元数据进行拆解，并在输出 Observable 上\n * 发出 `next` 、`error` 和 `complete` 。\n *\n * 与 {@link materialize} 结合来使用此操作符。\n *\n * @example <caption>将 Notification 类型的 Observable 转换成实际的 Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // 结果：\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} 该 Observable 会发出数据项和通知，它们是由源 Observable 所发出\n * 并且包装在 Notification 对象之中的。\n * @method dematerialize\n * @owner Observable\n ",
          "range": [
            44,
            1299
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 39,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "dematerialize",
          "range": [
            1316,
            1329
          ],
          "loc": {
            "start": {
              "line": 40,
              "column": 16
            },
            "end": {
              "line": 40,
              "column": 29
            }
          }
        },
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression",
                    "range": [
                      1345,
                      1349
                    ],
                    "loc": {
                      "start": {
                        "line": 41,
                        "column": 11
                      },
                      "end": {
                        "line": 41,
                        "column": 15
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "lift",
                    "range": [
                      1350,
                      1354
                    ],
                    "loc": {
                      "start": {
                        "line": 41,
                        "column": 16
                      },
                      "end": {
                        "line": 41,
                        "column": 20
                      }
                    }
                  },
                  "range": [
                    1345,
                    1354
                  ],
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 11
                    },
                    "end": {
                      "line": 41,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "DeMaterializeOperator",
                      "range": [
                        1359,
                        1380
                      ],
                      "loc": {
                        "start": {
                          "line": 41,
                          "column": 25
                        },
                        "end": {
                          "line": 41,
                          "column": 46
                        }
                      }
                    },
                    "arguments": [],
                    "range": [
                      1355,
                      1382
                    ],
                    "loc": {
                      "start": {
                        "line": 41,
                        "column": 21
                      },
                      "end": {
                        "line": 41,
                        "column": 48
                      }
                    }
                  }
                ],
                "range": [
                  1345,
                  1383
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 11
                  },
                  "end": {
                    "line": 41,
                    "column": 49
                  }
                }
              },
              "range": [
                1338,
                1384
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 4
                },
                "end": {
                  "line": 41,
                  "column": 50
                }
              }
            }
          ],
          "range": [
            1332,
            1386
          ],
          "loc": {
            "start": {
              "line": 40,
              "column": 32
            },
            "end": {
              "line": 42,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1307,
          1386
        ],
        "loc": {
          "start": {
            "line": 40,
            "column": 7
          },
          "end": {
            "line": 42,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * 将 {@link Notification} 对象的 Observable 转换成它们所代表的发送。\n *\n * <span class=\"informal\">将 {@link Notification} 对象拆开成实际的 `next`、\n * `error` 和 `complete` 发送。它与 {@link materialize} 是相反的。</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` 被假定用来操作只发送值为 {@link Notification} 对象的 `next`，\n * 不发送 `error` 的 Observable 。这样的 Obseravble 其实是 `materialize`\n * 操作符的输出。然后这些通知会使用它们所包含的元数据进行拆解，并在输出 Observable 上\n * 发出 `next` 、`error` 和 `complete` 。\n *\n * 与 {@link materialize} 结合来使用此操作符。\n *\n * @example <caption>将 Notification 类型的 Observable 转换成实际的 Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // 结果：\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} 该 Observable 会发出数据项和通知，它们是由源 Observable 所发出\n * 并且包装在 Notification 对象之中的。\n * @method dematerialize\n * @owner Observable\n ",
            "range": [
              44,
              1299
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 39,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        1300,
        1386
      ],
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * 将 {@link Notification} 对象的 Observable 转换成它们所代表的发送。\n *\n * <span class=\"informal\">将 {@link Notification} 对象拆开成实际的 `next`、\n * `error` 和 `complete` 发送。它与 {@link materialize} 是相反的。</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` 被假定用来操作只发送值为 {@link Notification} 对象的 `next`，\n * 不发送 `error` 的 Observable 。这样的 Obseravble 其实是 `materialize`\n * 操作符的输出。然后这些通知会使用它们所包含的元数据进行拆解，并在输出 Observable 上\n * 发出 `next` 、`error` 和 `complete` 。\n *\n * 与 {@link materialize} 结合来使用此操作符。\n *\n * @example <caption>将 Notification 类型的 Observable 转换成实际的 Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // 结果：\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} 该 Observable 会发出数据项和通知，它们是由源 Observable 所发出\n * 并且包装在 Notification 对象之中的。\n * @method dematerialize\n * @owner Observable\n ",
          "range": [
            44,
            1299
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 39,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "DeMaterializeOperator",
        "range": [
          1393,
          1414
        ],
        "loc": {
          "start": {
            "line": 43,
            "column": 6
          },
          "end": {
            "line": 43,
            "column": 27
          }
        }
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "call",
              "range": [
                1421,
                1425
              ],
              "loc": {
                "start": {
                  "line": 44,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 8
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "subscriber",
                  "range": [
                    1426,
                    1436
                  ],
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 9
                    },
                    "end": {
                      "line": 44,
                      "column": 19
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "source",
                  "range": [
                    1438,
                    1444
                  ],
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 21
                    },
                    "end": {
                      "line": 44,
                      "column": 27
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "source",
                          "range": [
                            1463,
                            1469
                          ],
                          "loc": {
                            "start": {
                              "line": 45,
                              "column": 15
                            },
                            "end": {
                              "line": 45,
                              "column": 21
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "subscribe",
                          "range": [
                            1470,
                            1479
                          ],
                          "loc": {
                            "start": {
                              "line": 45,
                              "column": 22
                            },
                            "end": {
                              "line": 45,
                              "column": 31
                            }
                          }
                        },
                        "range": [
                          1463,
                          1479
                        ],
                        "loc": {
                          "start": {
                            "line": 45,
                            "column": 15
                          },
                          "end": {
                            "line": 45,
                            "column": 31
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "DeMaterializeSubscriber",
                            "range": [
                              1484,
                              1507
                            ],
                            "loc": {
                              "start": {
                                "line": 45,
                                "column": 36
                              },
                              "end": {
                                "line": 45,
                                "column": 59
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "subscriber",
                              "range": [
                                1508,
                                1518
                              ],
                              "loc": {
                                "start": {
                                  "line": 45,
                                  "column": 60
                                },
                                "end": {
                                  "line": 45,
                                  "column": 70
                                }
                              }
                            }
                          ],
                          "range": [
                            1480,
                            1519
                          ],
                          "loc": {
                            "start": {
                              "line": 45,
                              "column": 32
                            },
                            "end": {
                              "line": 45,
                              "column": 71
                            }
                          }
                        }
                      ],
                      "range": [
                        1463,
                        1520
                      ],
                      "loc": {
                        "start": {
                          "line": 45,
                          "column": 15
                        },
                        "end": {
                          "line": 45,
                          "column": 72
                        }
                      }
                    },
                    "range": [
                      1456,
                      1521
                    ],
                    "loc": {
                      "start": {
                        "line": 45,
                        "column": 8
                      },
                      "end": {
                        "line": 45,
                        "column": 73
                      }
                    }
                  }
                ],
                "range": [
                  1446,
                  1527
                ],
                "loc": {
                  "start": {
                    "line": 44,
                    "column": 29
                  },
                  "end": {
                    "line": 46,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1425,
                1527
              ],
              "loc": {
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 46,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              1421,
              1527
            ],
            "loc": {
              "start": {
                "line": 44,
                "column": 4
              },
              "end": {
                "line": 46,
                "column": 5
              }
            },
            "static": false
          }
        ],
        "range": [
          1415,
          1529
        ],
        "loc": {
          "start": {
            "line": 43,
            "column": 28
          },
          "end": {
            "line": 47,
            "column": 1
          }
        }
      },
      "range": [
        1387,
        1529
      ],
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 47,
          "column": 1
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n ",
          "range": [
            1530,
            1621
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 0
            },
            "end": {
              "line": 52,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "DeMaterializeSubscriber",
        "range": [
          1628,
          1651
        ],
        "loc": {
          "start": {
            "line": 53,
            "column": 6
          },
          "end": {
            "line": 53,
            "column": 29
          }
        }
      },
      "superClass": {
        "type": "Identifier",
        "name": "Subscriber",
        "range": [
          1660,
          1670
        ],
        "loc": {
          "start": {
            "line": 53,
            "column": 38
          },
          "end": {
            "line": 53,
            "column": 48
          }
        }
      },
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "constructor",
              "range": [
                1677,
                1688
              ],
              "loc": {
                "start": {
                  "line": 54,
                  "column": 4
                },
                "end": {
                  "line": 54,
                  "column": 15
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "destination",
                  "range": [
                    1689,
                    1700
                  ],
                  "loc": {
                    "start": {
                      "line": 54,
                      "column": 16
                    },
                    "end": {
                      "line": 54,
                      "column": 27
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Super",
                        "range": [
                          1712,
                          1717
                        ],
                        "loc": {
                          "start": {
                            "line": 55,
                            "column": 8
                          },
                          "end": {
                            "line": 55,
                            "column": 13
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "destination",
                          "range": [
                            1718,
                            1729
                          ],
                          "loc": {
                            "start": {
                              "line": 55,
                              "column": 14
                            },
                            "end": {
                              "line": 55,
                              "column": 25
                            }
                          }
                        }
                      ],
                      "range": [
                        1712,
                        1730
                      ],
                      "loc": {
                        "start": {
                          "line": 55,
                          "column": 8
                        },
                        "end": {
                          "line": 55,
                          "column": 26
                        }
                      }
                    },
                    "range": [
                      1712,
                      1731
                    ],
                    "loc": {
                      "start": {
                        "line": 55,
                        "column": 8
                      },
                      "end": {
                        "line": 55,
                        "column": 27
                      }
                    }
                  }
                ],
                "range": [
                  1702,
                  1737
                ],
                "loc": {
                  "start": {
                    "line": 54,
                    "column": 29
                  },
                  "end": {
                    "line": 56,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1688,
                1737
              ],
              "loc": {
                "start": {
                  "line": 54,
                  "column": 15
                },
                "end": {
                  "line": 56,
                  "column": 5
                }
              }
            },
            "kind": "constructor",
            "computed": false,
            "range": [
              1677,
              1737
            ],
            "loc": {
              "start": {
                "line": 54,
                "column": 4
              },
              "end": {
                "line": 56,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "_next",
              "range": [
                1742,
                1747
              ],
              "loc": {
                "start": {
                  "line": 57,
                  "column": 4
                },
                "end": {
                  "line": 57,
                  "column": 9
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1748,
                    1753
                  ],
                  "loc": {
                    "start": {
                      "line": 57,
                      "column": 10
                    },
                    "end": {
                      "line": 57,
                      "column": 15
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "value",
                          "range": [
                            1765,
                            1770
                          ],
                          "loc": {
                            "start": {
                              "line": 58,
                              "column": 8
                            },
                            "end": {
                              "line": 58,
                              "column": 13
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "observe",
                          "range": [
                            1771,
                            1778
                          ],
                          "loc": {
                            "start": {
                              "line": 58,
                              "column": 14
                            },
                            "end": {
                              "line": 58,
                              "column": 21
                            }
                          }
                        },
                        "range": [
                          1765,
                          1778
                        ],
                        "loc": {
                          "start": {
                            "line": 58,
                            "column": 8
                          },
                          "end": {
                            "line": 58,
                            "column": 21
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              1779,
                              1783
                            ],
                            "loc": {
                              "start": {
                                "line": 58,
                                "column": 22
                              },
                              "end": {
                                "line": 58,
                                "column": 26
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "destination",
                            "range": [
                              1784,
                              1795
                            ],
                            "loc": {
                              "start": {
                                "line": 58,
                                "column": 27
                              },
                              "end": {
                                "line": 58,
                                "column": 38
                              }
                            }
                          },
                          "range": [
                            1779,
                            1795
                          ],
                          "loc": {
                            "start": {
                              "line": 58,
                              "column": 22
                            },
                            "end": {
                              "line": 58,
                              "column": 38
                            }
                          }
                        }
                      ],
                      "range": [
                        1765,
                        1796
                      ],
                      "loc": {
                        "start": {
                          "line": 58,
                          "column": 8
                        },
                        "end": {
                          "line": 58,
                          "column": 39
                        }
                      }
                    },
                    "range": [
                      1765,
                      1797
                    ],
                    "loc": {
                      "start": {
                        "line": 58,
                        "column": 8
                      },
                      "end": {
                        "line": 58,
                        "column": 40
                      }
                    }
                  }
                ],
                "range": [
                  1755,
                  1803
                ],
                "loc": {
                  "start": {
                    "line": 57,
                    "column": 17
                  },
                  "end": {
                    "line": 59,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1747,
                1803
              ],
              "loc": {
                "start": {
                  "line": 57,
                  "column": 9
                },
                "end": {
                  "line": 59,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              1742,
              1803
            ],
            "loc": {
              "start": {
                "line": 57,
                "column": 4
              },
              "end": {
                "line": 59,
                "column": 5
              }
            },
            "static": false
          }
        ],
        "range": [
          1671,
          1805
        ],
        "loc": {
          "start": {
            "line": 53,
            "column": 49
          },
          "end": {
            "line": 60,
            "column": 1
          }
        }
      },
      "range": [
        1622,
        1805
      ],
      "loc": {
        "start": {
          "line": 53,
          "column": 0
        },
        "end": {
          "line": 60,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n ",
          "range": [
            1530,
            1621
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 0
            },
            "end": {
              "line": 52,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=dematerialize.js.map",
          "range": [
            1806,
            1847
          ],
          "loc": {
            "start": {
              "line": 61,
              "column": 0
            },
            "end": {
              "line": 61,
              "column": 41
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    1805
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 60,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * 将 {@link Notification} 对象的 Observable 转换成它们所代表的发送。\n *\n * <span class=\"informal\">将 {@link Notification} 对象拆开成实际的 `next`、\n * `error` 和 `complete` 发送。它与 {@link materialize} 是相反的。</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` 被假定用来操作只发送值为 {@link Notification} 对象的 `next`，\n * 不发送 `error` 的 Observable 。这样的 Obseravble 其实是 `materialize`\n * 操作符的输出。然后这些通知会使用它们所包含的元数据进行拆解，并在输出 Observable 上\n * 发出 `next` 、`error` 和 `complete` 。\n *\n * 与 {@link materialize} 结合来使用此操作符。\n *\n * @example <caption>将 Notification 类型的 Observable 转换成实际的 Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // 结果：\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} 该 Observable 会发出数据项和通知，它们是由源 Observable 所发出\n * 并且包装在 Notification 对象之中的。\n * @method dematerialize\n * @owner Observable\n ",
      "range": [
        44,
        1299
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n ",
      "range": [
        1530,
        1621
      ],
      "loc": {
        "start": {
          "line": 48,
          "column": 0
        },
        "end": {
          "line": 52,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=dematerialize.js.map",
      "range": [
        1806,
        1847
      ],
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 61,
          "column": 41
        }
      }
    }
  ]
}