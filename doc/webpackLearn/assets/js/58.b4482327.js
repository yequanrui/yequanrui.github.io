(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{70:function(t,e,s){"use strict";s.r(e);var a=s(0),i=Object(a.a)({},function(){var t=this.$createElement;this._self._c;return this._m(0)},[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"_5-6-原理总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-原理总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 5-6 原理总结")]),e("p",[this._v("Webpack 是一个庞大的 Node.js 应用，如果你阅读过它的源码，你会发现实现一个完整的 Webpack 需要编写非常多的代码。 但你无需了解所有的细节，只需了解其整体架构和部分细节即可。")]),e("p",[this._v("对 Webpack 的使用者来说，它是一个简单强大的工具； 对 Webpack 的开发者来说，它是一个扩展性的高系统。")]),e("p",[this._v("Webpack 之所以能成功，在于它把复杂的实现隐藏了起来，给用户暴露出的只是一个简单的工具，让用户能快速达成目的。 同时整体架构设计合理，扩展性高，开发扩展难度不高，通过社区补足了大量缺失的功能，让 Webpack 几乎能胜任任何场景。")]),e("p",[this._v("通过本章的学习，希望你不仅能学会如何编写 Webpack 扩展，也能从中领悟到如何设计好的系统架构。")])])}],!1,null,null,null);e.default=i.exports}}]);