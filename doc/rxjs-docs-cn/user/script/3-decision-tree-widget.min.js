(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var isValidString=function isValidString(param){return typeof param==="string"&&param.length>0};var startsWith=function startsWith(string,start){return string[0]===start};var isSelector=function isSelector(param){return isValidString(param)&&(startsWith(param,".")||startsWith(param,"#"))};var node=function node(h){return function(tagName){return function(first){for(var _len=arguments.length,rest=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){rest[_key-1]=arguments[_key]}if(isSelector(first)){return h.apply(undefined,[tagName+first].concat(rest))}else{return h.apply(undefined,[tagName,first].concat(rest))}}}};var TAG_NAMES=["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","dd","del","dfn","dir","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","meta","nav","noscript","object","ol","optgroup","option","p","param","pre","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","sup","table","tbody","td","textarea","tfoot","th","thead","title","tr","u","ul","video","progress"];exports["default"]=function(h){var createTag=node(h);var exported={TAG_NAMES:TAG_NAMES,isSelector:isSelector,createTag:createTag};TAG_NAMES.forEach(function(n){exported[n]=createTag(n)});return exported};module.exports=exports["default"]},{}],2:[function(require,module,exports){var VNode=require("./vnode");var is=require("./is");function addNS(data,children){data.ns="http://www.w3.org/2000/svg";if(children!==undefined){for(var i=0;i<children.length;++i){addNS(children[i].data,children[i].children)}}}module.exports=function h(sel,b,c){var data={},children,text,i;if(arguments.length===3){data=b;if(is.array(c)){children=c}else if(is.primitive(c)){text=c}}else if(arguments.length===2){if(is.array(b)){children=b}else if(is.primitive(b)){text=b}else{data=b}}if(is.array(children)){for(i=0;i<children.length;++i){if(is.primitive(children[i]))children[i]=VNode(undefined,undefined,undefined,children[i])}}if(sel[0]==="s"&&sel[1]==="v"&&sel[2]==="g"){addNS(data,children)}return VNode(sel,data,children,text,undefined)}},{"./is":4,"./vnode":10}],3:[function(require,module,exports){function createElement(tagName){return document.createElement(tagName)}function createElementNS(namespaceURI,qualifiedName){return document.createElementNS(namespaceURI,qualifiedName)}function createTextNode(text){return document.createTextNode(text)}function insertBefore(parentNode,newNode,referenceNode){parentNode.insertBefore(newNode,referenceNode)}function removeChild(node,child){node.removeChild(child)}function appendChild(node,child){node.appendChild(child)}function parentNode(node){return node.parentElement}function nextSibling(node){return node.nextSibling}function tagName(node){return node.tagName}function setTextContent(node,text){node.textContent=text}module.exports={createElement:createElement,createElementNS:createElementNS,createTextNode:createTextNode,appendChild:appendChild,removeChild:removeChild,insertBefore:insertBefore,parentNode:parentNode,nextSibling:nextSibling,tagName:tagName,setTextContent:setTextContent}},{}],4:[function(require,module,exports){module.exports={array:Array.isArray,primitive:function(s){return typeof s==="string"||typeof s==="number"}}},{}],5:[function(require,module,exports){var booleanAttrs=["allowfullscreen","async","autofocus","autoplay","checked","compact","controls","declare","default","defaultchecked","defaultmuted","defaultselected","defer","disabled","draggable","enabled","formnovalidate","hidden","indeterminate","inert","ismap","itemscope","loop","multiple","muted","nohref","noresize","noshade","novalidate","nowrap","open","pauseonexit","readonly","required","reversed","scoped","seamless","selected","sortable","spellcheck","translate","truespeed","typemustmatch","visible"];var booleanAttrsDict={};for(var i=0,len=booleanAttrs.length;i<len;i++){booleanAttrsDict[booleanAttrs[i]]=true}function updateAttrs(oldVnode,vnode){var key,cur,old,elm=vnode.elm,oldAttrs=oldVnode.data.attrs||{},attrs=vnode.data.attrs||{};for(key in attrs){cur=attrs[key];old=oldAttrs[key];if(old!==cur){if(!cur&&booleanAttrsDict[key])elm.removeAttribute(key);else elm.setAttribute(key,cur)}}for(key in oldAttrs){if(!(key in attrs)){elm.removeAttribute(key)}}}module.exports={create:updateAttrs,update:updateAttrs}},{}],6:[function(require,module,exports){function updateClass(oldVnode,vnode){var cur,name,elm=vnode.elm,oldClass=oldVnode.data.class||{},klass=vnode.data.class||{};for(name in oldClass){if(!klass[name]){elm.classList.remove(name)}}for(name in klass){cur=klass[name];if(cur!==oldClass[name]){elm.classList[cur?"add":"remove"](name)}}}module.exports={create:updateClass,update:updateClass}},{}],7:[function(require,module,exports){function updateProps(oldVnode,vnode){var key,cur,old,elm=vnode.elm,oldProps=oldVnode.data.props||{},props=vnode.data.props||{};for(key in oldProps){if(!props[key]){delete elm[key]}}for(key in props){cur=props[key];old=oldProps[key];if(old!==cur&&(key!=="value"||elm[key]!==cur)){elm[key]=cur}}}module.exports={create:updateProps,update:updateProps}},{}],8:[function(require,module,exports){var raf=typeof window!=="undefined"&&window.requestAnimationFrame||setTimeout;var nextFrame=function(fn){raf(function(){raf(fn)})};function setNextFrame(obj,prop,val){nextFrame(function(){obj[prop]=val})}function updateStyle(oldVnode,vnode){var cur,name,elm=vnode.elm,oldStyle=oldVnode.data.style||{},style=vnode.data.style||{},oldHasDel="delayed"in oldStyle;for(name in oldStyle){if(!style[name]){elm.style[name]=""}}for(name in style){cur=style[name];if(name==="delayed"){for(name in style.delayed){cur=style.delayed[name];if(!oldHasDel||cur!==oldStyle.delayed[name]){setNextFrame(elm.style,name,cur)}}}else if(name!=="remove"&&cur!==oldStyle[name]){elm.style[name]=cur}}}function applyDestroyStyle(vnode){var style,name,elm=vnode.elm,s=vnode.data.style;if(!s||!(style=s.destroy))return;for(name in style){elm.style[name]=style[name]}}function applyRemoveStyle(vnode,rm){var s=vnode.data.style;if(!s||!s.remove){rm();return}var name,elm=vnode.elm,idx,i=0,maxDur=0,compStyle,style=s.remove,amount=0,applied=[];for(name in style){applied.push(name);elm.style[name]=style[name]}compStyle=getComputedStyle(elm);var props=compStyle["transition-property"].split(", ");for(;i<props.length;++i){if(applied.indexOf(props[i])!==-1)amount++}elm.addEventListener("transitionend",function(ev){if(ev.target===elm)--amount;if(amount===0)rm()})}module.exports={create:updateStyle,update:updateStyle,destroy:applyDestroyStyle,remove:applyRemoveStyle}},{}],9:[function(require,module,exports){"use strict";var VNode=require("./vnode");var is=require("./is");var domApi=require("./htmldomapi.js");function isUndef(s){return s===undefined}function isDef(s){return s!==undefined}var emptyNode=VNode("",{},[],undefined,undefined);function sameVnode(vnode1,vnode2){return vnode1.key===vnode2.key&&vnode1.sel===vnode2.sel}function createKeyToOldIdx(children,beginIdx,endIdx){var i,map={},key;for(i=beginIdx;i<=endIdx;++i){key=children[i].key;if(isDef(key))map[key]=i}return map}var hooks=["create","update","remove","destroy","pre","post"];function init(modules,api){var i,j,cbs={};if(isUndef(api))api=domApi;for(i=0;i<hooks.length;++i){cbs[hooks[i]]=[];for(j=0;j<modules.length;++j){if(modules[j][hooks[i]]!==undefined)cbs[hooks[i]].push(modules[j][hooks[i]])}}function emptyNodeAt(elm){return VNode(api.tagName(elm).toLowerCase(),{},[],undefined,elm)}function createRmCb(childElm,listeners){return function(){if(--listeners===0){var parent=api.parentNode(childElm);api.removeChild(parent,childElm)}}}function createElm(vnode,insertedVnodeQueue){var i,thunk,data=vnode.data;if(isDef(data)){if(isDef(i=data.hook)&&isDef(i=i.init))i(vnode);if(isDef(i=data.vnode)){thunk=vnode;vnode=i}}var elm,children=vnode.children,sel=vnode.sel;if(isDef(sel)){var hashIdx=sel.indexOf("#");var dotIdx=sel.indexOf(".",hashIdx);var hash=hashIdx>0?hashIdx:sel.length;var dot=dotIdx>0?dotIdx:sel.length;var tag=hashIdx!==-1||dotIdx!==-1?sel.slice(0,Math.min(hash,dot)):sel;elm=vnode.elm=isDef(data)&&isDef(i=data.ns)?api.createElementNS(i,tag):api.createElement(tag);if(hash<dot)elm.id=sel.slice(hash+1,dot);if(dotIdx>0)elm.className=sel.slice(dot+1).replace(/\./g," ");if(is.array(children)){for(i=0;i<children.length;++i){api.appendChild(elm,createElm(children[i],insertedVnodeQueue))}}else if(is.primitive(vnode.text)){api.appendChild(elm,api.createTextNode(vnode.text))}for(i=0;i<cbs.create.length;++i)cbs.create[i](emptyNode,vnode);i=vnode.data.hook;if(isDef(i)){if(i.create)i.create(emptyNode,vnode);if(i.insert)insertedVnodeQueue.push(vnode)}}else{elm=vnode.elm=api.createTextNode(vnode.text)}if(isDef(thunk))thunk.elm=vnode.elm;return vnode.elm}function addVnodes(parentElm,before,vnodes,startIdx,endIdx,insertedVnodeQueue){for(;startIdx<=endIdx;++startIdx){api.insertBefore(parentElm,createElm(vnodes[startIdx],insertedVnodeQueue),before)}}function invokeDestroyHook(vnode){var i,j,data=vnode.data;if(isDef(data)){if(isDef(i=data.hook)&&isDef(i=i.destroy))i(vnode);for(i=0;i<cbs.destroy.length;++i)cbs.destroy[i](vnode);if(isDef(i=vnode.children)){for(j=0;j<vnode.children.length;++j){invokeDestroyHook(vnode.children[j])}}if(isDef(i=data.vnode))invokeDestroyHook(i)}}function removeVnodes(parentElm,vnodes,startIdx,endIdx){for(;startIdx<=endIdx;++startIdx){var i,listeners,rm,ch=vnodes[startIdx];if(isDef(ch)){if(isDef(ch.sel)){invokeDestroyHook(ch);listeners=cbs.remove.length+1;rm=createRmCb(ch.elm,listeners);for(i=0;i<cbs.remove.length;++i)cbs.remove[i](ch,rm);if(isDef(i=ch.data)&&isDef(i=i.hook)&&isDef(i=i.remove)){i(ch,rm)}else{rm()}}else{api.removeChild(parentElm,ch.elm)}}}}function updateChildren(parentElm,oldCh,newCh,insertedVnodeQueue){var oldStartIdx=0,newStartIdx=0;var oldEndIdx=oldCh.length-1;var oldStartVnode=oldCh[0];var oldEndVnode=oldCh[oldEndIdx];var newEndIdx=newCh.length-1;var newStartVnode=newCh[0];var newEndVnode=newCh[newEndIdx];var oldKeyToIdx,idxInOld,elmToMove,before;while(oldStartIdx<=oldEndIdx&&newStartIdx<=newEndIdx){if(isUndef(oldStartVnode)){oldStartVnode=oldCh[++oldStartIdx]}else if(isUndef(oldEndVnode)){oldEndVnode=oldCh[--oldEndIdx]}else if(sameVnode(oldStartVnode,newStartVnode)){patchVnode(oldStartVnode,newStartVnode,insertedVnodeQueue);oldStartVnode=oldCh[++oldStartIdx];newStartVnode=newCh[++newStartIdx]}else if(sameVnode(oldEndVnode,newEndVnode)){patchVnode(oldEndVnode,newEndVnode,insertedVnodeQueue);oldEndVnode=oldCh[--oldEndIdx];newEndVnode=newCh[--newEndIdx]}else if(sameVnode(oldStartVnode,newEndVnode)){patchVnode(oldStartVnode,newEndVnode,insertedVnodeQueue);api.insertBefore(parentElm,oldStartVnode.elm,api.nextSibling(oldEndVnode.elm));oldStartVnode=oldCh[++oldStartIdx];newEndVnode=newCh[--newEndIdx]}else if(sameVnode(oldEndVnode,newStartVnode)){patchVnode(oldEndVnode,newStartVnode,insertedVnodeQueue);api.insertBefore(parentElm,oldEndVnode.elm,oldStartVnode.elm);oldEndVnode=oldCh[--oldEndIdx];newStartVnode=newCh[++newStartIdx]}else{if(isUndef(oldKeyToIdx))oldKeyToIdx=createKeyToOldIdx(oldCh,oldStartIdx,oldEndIdx);idxInOld=oldKeyToIdx[newStartVnode.key];if(isUndef(idxInOld)){api.insertBefore(parentElm,createElm(newStartVnode,insertedVnodeQueue),oldStartVnode.elm);newStartVnode=newCh[++newStartIdx]}else{elmToMove=oldCh[idxInOld];patchVnode(elmToMove,newStartVnode,insertedVnodeQueue);oldCh[idxInOld]=undefined;api.insertBefore(parentElm,elmToMove.elm,oldStartVnode.elm);newStartVnode=newCh[++newStartIdx]}}}if(oldStartIdx>oldEndIdx){before=isUndef(newCh[newEndIdx+1])?null:newCh[newEndIdx+1].elm;addVnodes(parentElm,before,newCh,newStartIdx,newEndIdx,insertedVnodeQueue)}else if(newStartIdx>newEndIdx){removeVnodes(parentElm,oldCh,oldStartIdx,oldEndIdx)}}function patchVnode(oldVnode,vnode,insertedVnodeQueue){var i,hook;if(isDef(i=vnode.data)&&isDef(hook=i.hook)&&isDef(i=hook.prepatch)){i(oldVnode,vnode)}if(isDef(i=oldVnode.data)&&isDef(i=i.vnode))oldVnode=i;if(isDef(i=vnode.data)&&isDef(i=i.vnode)){patchVnode(oldVnode,i,insertedVnodeQueue);vnode.elm=i.elm;return}var elm=vnode.elm=oldVnode.elm,oldCh=oldVnode.children,ch=vnode.children;if(oldVnode===vnode)return;if(!sameVnode(oldVnode,vnode)){var parentElm=api.parentNode(oldVnode.elm);elm=createElm(vnode,insertedVnodeQueue);api.insertBefore(parentElm,elm,oldVnode.elm);removeVnodes(parentElm,[oldVnode],0,0);return}if(isDef(vnode.data)){for(i=0;i<cbs.update.length;++i)cbs.update[i](oldVnode,vnode);i=vnode.data.hook;if(isDef(i)&&isDef(i=i.update))i(oldVnode,vnode)}if(isUndef(vnode.text)){if(isDef(oldCh)&&isDef(ch)){if(oldCh!==ch)updateChildren(elm,oldCh,ch,insertedVnodeQueue)}else if(isDef(ch)){if(isDef(oldVnode.text))api.setTextContent(elm,"");addVnodes(elm,null,ch,0,ch.length-1,insertedVnodeQueue)}else if(isDef(oldCh)){removeVnodes(elm,oldCh,0,oldCh.length-1)}else if(isDef(oldVnode.text)){api.setTextContent(elm,"")}}else if(oldVnode.text!==vnode.text){api.setTextContent(elm,vnode.text)}if(isDef(hook)&&isDef(i=hook.postpatch)){i(oldVnode,vnode)}}return function(oldVnode,vnode){var i,elm,parent;var insertedVnodeQueue=[];for(i=0;i<cbs.pre.length;++i)cbs.pre[i]();if(isUndef(oldVnode.sel)){oldVnode=emptyNodeAt(oldVnode)}if(sameVnode(oldVnode,vnode)){patchVnode(oldVnode,vnode,insertedVnodeQueue)}else{elm=oldVnode.elm;parent=api.parentNode(elm);createElm(vnode,insertedVnodeQueue);if(parent!==null){api.insertBefore(parent,vnode.elm,api.nextSibling(elm));removeVnodes(parent,[oldVnode],0,0)}}for(i=0;i<insertedVnodeQueue.length;++i){insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i])}for(i=0;i<cbs.post.length;++i)cbs.post[i]();return vnode}}module.exports={init:init}},{"./htmldomapi.js":3,"./is":4,"./vnode":10}],10:[function(require,module,exports){module.exports=function(sel,data,children,text,elm){var key=data===undefined?undefined:data.key;return{sel:sel,data:data,children:children,text:text,elm:elm,key:key}}},{}],11:[function(require,module,exports){"use strict";var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"])_i["return"]()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError("Invalid attempt to destructure non-iterable instance")}}}();var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var snabbdom=require("snabbdom");var classModule=require("snabbdom/modules/class");var propsModule=require("snabbdom/modules/props");var styleModule=require("snabbdom/modules/style");var attrsModule=require("snabbdom/modules/attributes");var h=require("snabbdom/h");var _require=require("hyperscript-helpers")(h),div=_require.div,h4=_require.h4,p=_require.p,li=_require.li,ul=_require.ul,a=_require.a,span=_require.span;var tree=require("./tree.json");var patch=snabbdom.init([classModule,propsModule,styleModule,attrsModule]);function intent(containerElem){var click$=Rx.Observable.fromEvent(containerElem,"click");var chooseOption$=click$.filter(function(ev){return ev.target.className==="option"}).map(function(ev){return{type:"CHOOSE_OPTION",payload:parseInt(ev.target.dataset.index)}});var undo$=click$.filter(function(ev){return ev.target.className==="undo"}).map(function(){return{type:"UNDO"}});var reset$=click$.filter(function(ev){return ev.target.className==="reset"}).map(function(){return{type:"RESET"}});return Rx.Observable.merge(chooseOption$,undo$,reset$)}function model(action$){var initialState={tree:tree,current:[]};var selectReducer$=action$.filter(function(action){return action.type==="CHOOSE_OPTION"}).map(function(action){return function(state){return _extends({},state,{current:state.current.concat(action.payload)})}});var undoReducer$=action$.filter(function(action){return action.type==="UNDO"}).map(function(){return function(state){var newCurrent=state.current.slice();newCurrent.pop();return _extends({},state,{current:newCurrent})}});var resetReducer$=action$.filter(function(action){return action.type==="RESET"}).map(function(){return function(state){return initialState}});return Rx.Observable.merge(selectReducer$,undoReducer$,resetReducer$).scan(function(state,reducer){return reducer(state)},initialState).startWith(initialState)}function viewModel(state$){return state$.map(function(state){var previous=[];var currentTree=state.tree;for(var i=0;i<state.current.length;i++){previous.push(currentTree.children[state.current[i]].label);currentTree=currentTree.children[state.current[i]]}previous=previous.join("");return{previous:previous,options:currentTree.children}})}function renderCurrentSentence(state){var WELCOME_SENTENCE="你需要找到一个操作符来解决你的问题吗？ "+"从下面的列表中选择一个选项开始：";return p(".current-sentence",[!state.previous?WELCOME_SENTENCE:null,state.previous?'"'+state.previous+(state.options.length===1?".":"...")+'"':null,state.previous?span(".undo","↩ 撤销"):null,state.previous?span(".reset","或 重置"):null].filter(function(x){return x!==null}))}function renderOption(option,index){var endString=option.children.length>1?"...":".";return li(".option",{attrs:{"data-index":index}},""+option.label+endString)}var OBSERVABLE_PATH="./class/es6/Observable.js~Observable.html";function renderStaticDecision(option){var label=option.label.replace("Observable.","");return h4(".decision",["» 你想要的静态操作符 ",a({attrs:{href:OBSERVABLE_PATH+"#static-method-"+label}},label),"."])}function renderInstanceDecision(option){return h4(".decision",["» 你想要的实例操作符 ",a({attrs:{href:OBSERVABLE_PATH+"#instance-method-"+option.label}},option.label),"."])}function renderItem(option,index){if(option.children){return renderOption(option,index)}else if(option.label.match(/^Observable\./)){return renderStaticDecision(option)}else{return renderInstanceDecision(option)}}function view(state$){return state$.map(function(state){return div([renderCurrentSentence(state),ul(state.options.map(renderItem))])})}function main(containerElem){var action$=intent(containerElem);var state$=model(action$);var displayState$=viewModel(state$);var vdom$=view(displayState$);return{DOM:vdom$}}window.addEventListener("load",function(){var container=document.querySelector(".decision-tree-widget");var vdom$=main(container).DOM;vdom$.startWith(container).pairwise().subscribe(function(_ref){var _ref2=_slicedToArray(_ref,2),a=_ref2[0],b=_ref2[1];patch(a,b)})})},{"./tree.json":12,"hyperscript-helpers":1,snabbdom:9,"snabbdom/h":2,"snabbdom/modules/attributes":5,"snabbdom/modules/class":6,"snabbdom/modules/props":7,"snabbdom/modules/style":8}],12:[function(require,module,exports){module.exports={children:[{label:"我有一个已存在的 Observable， 然后",children:[{label:"我想改变每一个发出的值，",children:[{label:"这个值是个常量",children:[{label:"mapTo"}]},{label:"这个值是通过公式计算得到的",children:[{label:"map"}]}]},{label:"我想从每个发出的值中选取一个属性",children:[{label:"pluck"}]},{label:"我想在不影响发出的值的情况下窥探它们",children:[{label:"do"}]},{label:"我想只允许某些值通过，做法是",children:[{label:"基于自定义逻辑",children:[{label:"filter"}]},{label:"如果通过的值是在 Observable 起始处，并且",children:[{label:"只要第一个值",children:[{label:"first"}]},{label:"基于给定的数量",children:[{label:"take"}]},{label:"基于自定义逻辑",children:[{label:"takeWhile"}]}]},{label:"如果它正好是第n个发出的值",children:[{label:"elementAt"}]},{label:"如果通过的值是在 Observable 结尾处，并且",children:[{label:"只要最后一个值",children:[{label:"last"}]},{label:"基于给定的数量",children:[{label:"takeLast"}]}]},{label:"直到另一个 Observable 发出值或完成",children:[{label:"takeUntil"}]}]},{label:"我想忽略某些值，做法是",children:[{label:"全部忽略",children:[{label:"ignoreElements"}]},{label:"从 Observable 的起始处，并且",children:[{label:"基于给定的数量",children:[{label:"skip"}]},{label:"基于自定义逻辑",children:[{label:"skipWhile"}]}]},{label:"从 Observable 的结尾处",children:[{label:"skipLast"}]},{label:"直到另一个 Observabler 发出值",children:[{label:"skipUntil"}]},{label:"匹配一些前面的值，",children:[{label:"根据值是否相等，并且",children:[{label:"比较的是上一个值",children:[{label:"distinctUntilChanged"}]},{label:"比较的是过去一段时间内",children:[{label:"distinct"}]}]},{label:"根据键值或对象属性，并且",children:[{label:"比较的是上一个值",children:[{label:"distinctUntilKeyChanged"}]}]}]},{label:"针对那么发生频率过高的，然后",children:[{label:"只发出每个时间窗口内的第一个值，并且",children:[{label:"时间窗口取决于由另外一个 Observable 的发送",children:[{label:"throttle"}]},{label:"时间窗口取决于时间区间",children:[{label:"throttleTime"}]}]},{label:"只发出每个时间窗口内的最后一个值，并且",children:[{label:"时间窗口取决于由另外一个 Observable 的发送",children:[{label:"audit"}]},{label:"时间窗口取决于时间区间",children:[{label:"auditTime"}]}]},{label:"一旦沉默的时间足够长的话，就发出最后一个值，并且",children:[{label:"沉默持续时间阈值取决于另外一个 Observable",children:[{label:"debounce"}]},{label:"沉默持续时间阈值取决于时间区间",children:[{label:"debounceTime"}]}]}]}]},{label:"我想把所有发出的值用来进行公式计算，并且",children:[{label:"只输出最终的计算值",children:[{label:"reduce"}]},{label:"当源发出值时输出计算值",children:[{label:"scan"}]},{label:"当源发出值时将计算值作为嵌套的 Observable 输出",children:[{label:"mergeScan"}]}]},{label:"我想用元数据包装它的消息，元数据",children:[{label:"描述了每次通知 (next、error 或 complete)",children:[{label:"materialize"}]},{label:"包含自从上次发出值以来的时间",children:[{label:"timeInterval"}]}]},{label:"在一段时间不活动之后",children:[{label:"我想抛出错误",children:[{label:"timeout"}]},{label:"我想切换到另一个 Observable",children:[{label:"timeoutWith"}]}]},{label:"我想确保只有一个值",children:[{label:"single"}]},{label:"我想知道一共发出了多少个值",children:[{label:"count"}]},{label:"我想预先添加一个值",children:[{label:"startWith"}]},{label:"我想延迟发出值，并且是",children:[{label:"基于给定的一段时间",children:[{label:"delay"}]},{label:"基于另一个 Observable 的发出值",children:[{label:"delayWhen"}]}]},{label:"我想给值分组，做法是",children:[{label:"直到 Observable 完成，并且",children:[{label:"转换成数组",children:[{label:"toArray"}]},{label:"转换成 Promise",children:[{label:"toPromise"}]}]},{label:"以数组作为单位连续地成对排列",children:[{label:"pairwise"}]},{label:"基于一个标准，输出两个 Observables：一个符合标准，一个不符合",children:[{label:"partition"}]},{label:"以特定大小进行分组，并且",children:[{label:"发出的组是数组",children:[{label:"bufferCount"}]},{label:"发出的组是嵌套的 Observable",children:[{label:"windowCount"}]}]},{label:"基于时间，并且",children:[{label:"发出的组是数组",children:[{label:"bufferTime"}]},{label:"发出的组是嵌套的 Observable",children:[{label:"windowTime"}]}]},{label:"直到另一个 Obserable 发出，并且",children:[{label:"发出的组是数组",children:[{label:"buffer"}]},{label:"发出的组是嵌套的 Observable",children:[{label:"window"}]}]},{label:"基于按需创建的 Observabale 的发出值",children:[{label:"发出的组是数组",children:[{label:"bufferWhen"}]},{label:"发出的组是嵌套的 Observable",children:[{label:"windowWhen"}]}]},{label:"基于另一个 Observable 来开启组，然后再基于一个 Observable 来关闭组",children:[{label:"发出的组是数组",children:[{label:"bufferToggle"}]},{label:"发出的组是嵌套的 Observable",children:[{label:"windowToggle"}]}]},{label:"基于发出值进行的关键性计算",children:[{label:"groupBy"}]}]},{label:"我想为每个值开启一个新的 Observable，并且",children:[{label:"从所有嵌套的 Observables 中发出的值是并行的，其中",children:[{label:"对于每个值嵌套的 Observable 都相同的",children:[{label:"mergeMapTo"}]},{label:"对于每个值嵌套的 Observable 都是经过计算得出的",children:[{label:"mergeMap"}]}]},{label:"从所有嵌套的 Observables 中发出的值是按顺序来的，其中",children:[{label:"对于每个值嵌套的 Observable 都相同的",children:[{label:"concatMapTo"}]},{label:"对于每个值嵌套的 Observable 都是经过计算得出的",children:[{label:"concatMap"}]}]},{label:"在新值到达时会取消先前的嵌套的 Observable",children:[{label:"对于每个值嵌套的 Observable 都相同的",children:[{label:"switchMapTo"}]},{label:"对于每个值嵌套的 Observable 都是经过计算得出的",children:[{label:"switchMap"}]}]},{label:"在当前嵌套的 Observable 还没有完成时忽略接下来的值",children:[{label:"exhaustMap"}]},{label:"递归地为每个新值开启一个新的 Observable",children:[{label:"expand"}]}]},{label:"我想执行自定义操作而不会破坏链式调用的 API",children:[{label:"let"}]},{label:"我想在多个订阅者之间共享同一个 subscription，做法是",children:[{label:"使用常规的 Subject，并且",children:[{label:"在第一个订阅者到达后立即启动",children:[{label:"share"}]},{label:"手动地或命令式地启动",children:[{label:"publish"}]}]},{label:"使用 BehaviorSubject",children:[{label:"publishBehavior"}]},{label:"使用 ReplaySubject",children:[{label:"publishReplay"}]},{label:"使用 AsyncSubject",children:[{label:"publishLast"}]},{label:"使用具体的 Subject 实现",children:[{label:"multicast"}]},{label:"使其行为像是缓存",children:[{label:"cache"}]}]},{label:"当错误发生时，",children:[{label:"我想开启一个新的 Observable",children:[{label:"catch"}]},{label:"我想重新订阅，并且",children:[{label:"是立即的",children:[{label:"retry"}]},{label:"当另一个 Observable 发出时",children:[{label:"retryWhen"}]}]}]},{label:"当完成时，",children:[{label:"我想重新订阅，并且",children:[{label:"是立即的",children:[{label:"repeat"}]},{label:"当另一个 Observable 发出时",children:[{label:"repeatWhen"}]}]},{label:"我想开启一个新的 Observable",children:[{label:"concat"}]}]},{label:"当完成时、发生错误时或取消订阅时，我想执行一个函数",children:[{label:"finally"}]},{label:"我想更改调度器，并且这个调度器",children:[{label:"按路由调用订阅",children:[{label:"subscribeOn"}]},{label:"按路由将值发送给观察者",children:[{label:"observeOn"}]}]},{label:"我想将这个 Observable 与其他的进行组合，并且",children:[{label:"我只想从首先发出值的 Observable 中接收值",children:[{label:"race"}]},{label:"我想输出任何一个 Observable 的值",children:[{label:"merge"}]},{label:"我想输出的值是根据源 Observables 计算出来的，并且",children:[{label:"当任意源发出值时使用每个源的最后一个值",children:[{label:"combineLatest"}]},{label:"只有当主要这个的 Observabale 发出值时使用每个源的最后一个值",children:[{label:"withLatestFrom"}]},{label:"每个源的值只使用一次",children:[{label:"zip"}]}]}]}]},{label:"我把一些 Observables 组合成了一个 Observable，然后",children:[{label:"我只想从首先发出值的 Observable 中接收值",children:[{label:"Observable.race"}]},{label:"我想所有的 Observables 都完成后再通知我",children:[{label:"Observable.forkJoin"}]},{label:"我想输出任何一个 Observable 的值",children:[{label:"Observable.merge"}]},{label:"我想输出的值是根据源 Observables 计算出来的，并且",children:[{label:"当任意源发出值时使用每个源的最后一个值",children:[{label:"Observable.combineLatest"}]},{label:"每个源的值只使用一次",children:[{label:"Observable.zip"}]}]},{label:"我想按顺序订阅每一个 Observable",children:[{label:"Observable.concat"}]}]},{label:"我还没有 Observable， 然后",children:[{label:"我想创建一个新的 Observable，它",children:[{label:"使用自定义逻辑",children:[{label:"Observable.create"}]},{label:"使用类似于 for 循环的状态机",children:[{label:"Observable.generate"}]},{label:"抛出错误",children:[{label:"Observable.throw"}]},{label:"只是完成流而不发出任何值",children:[{label:"Observable.empty"}]},{label:"从不发出任何东西",children:[{label:"Observable.never"}]},{label:"来自已存在的事件源",children:[{label:"来自 DOM 或 Node.js 或其他类似的",children:[{label:"Observable.fromEvent"}]},{label:"使用 API 来添加或移除事件处理方法",children:[{label:"Observable.fromEventPattern"}]}]},{label:"来自 ES6 的 Promise",children:[{label:"Observable.fromPromise"}]},{label:"来自 Promise 或事件源或数组",children:[{label:"Observable.from"}]},{label:"迭代",children:[{label:"数组中的值",children:[{label:"Observable.fromArray"}]},{label:"数字区间中的值",children:[{label:"Observable.range"}]},{label:"预先被指定为参数的值",children:[{label:"Observable.of"}]}]},{label:"在定时器上发出值，并且",children:[{label:"是有规律的",children:[{label:"Observable.interval"}]},{label:"具有可选的初始延迟时间",children:[{label:"Observable.timer"}]}]},{label:"被订阅时才会按需建立",children:[{label:"Observable.defer"}]}]},{label:"我想把回调函数转换成 Observable，它",children:[{label:"支持传统的回调函数 API",children:[{label:"Observable.bindCallback"}]},{label:"支持 Node.js 风格的回调函数 API",children:[{label:"Observable.bindNodeCallback"}]}]}]}]}},{}]},{},[11]);