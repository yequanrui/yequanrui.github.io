(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{115:function(t,s,n){"use strict";n.r(s);var a=[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"_4-11-提取公共代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-11-提取公共代码","aria-hidden":"true"}},[this._v("#")]),this._v(" 4-11 提取公共代码")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"为什么需要提取公共代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要提取公共代码","aria-hidden":"true"}},[this._v("#")]),this._v(" 为什么需要提取公共代码")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("相同的资源被重复的加载，"),s("strong",[this._v("浪费")]),this._v("用户的流量和服务器的成本；")]),s("li",[this._v("每个页面需要加载的资源太大，导致网页首屏加载缓慢，影响用户体验。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("减少网络传输流量，降低服务器成本；")]),s("li",[this._v("虽然用户第一次打开网站的速度得不到优化，但之后访问其它页面的速度将大大提升。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"如何提取公共代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何提取公共代码","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何提取公共代码")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("根据你网站所使用的技术栈，找出网站所有页面都需要用到的基础库，以采用 React 技术栈的网站为例，所有页面都会依赖 "),n("code",[t._v("react")]),t._v("、"),n("code",[t._v("react-dom")]),t._v(" 等库，把它们提取到一个单独的文件。 一般把这个文件叫做 "),n("code",[t._v("base.js")]),t._v("，因为它包含所有网页的基础运行环境；")]),n("li",[t._v("在剔除了各个页面中被 "),n("code",[t._v("base.js")]),t._v(" 包含的部分代码外，再找出所有页面都依赖的公共部分的代码提取出来放到 "),n("code",[t._v("common.js")]),t._v(" 中去。")]),n("li",[t._v("再为每个网页都生成一个单独的文件，这个文件中不再包含 "),n("code",[t._v("base.js")]),t._v(" 和 "),n("code",[t._v("common.js")]),t._v(" 中包含的部分，而只包含各个页面单独需要的部分代码。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:n(37),alt:"图4-11 提取公共代码文件结构图"}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("读到这里你可以会有疑问：既然能找出所有页面都依赖的公共代码，并提取出来放到 "),n("code",[t._v("common.js")]),t._v("中去，为什么还需要再把网站所有页面都需要用到的基础库提取到 "),n("code",[t._v("base.js")]),t._v(" 去呢？ "),n("strong",[t._v("原因是为了长期的缓存 "),n("code",[t._v("base.js")]),t._v(" 这个文件")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("把所有页面都需要用到的基础库提取到 "),s("code",[this._v("base.js")]),this._v(" 的好处在于只要不升级基础库的版本，"),s("code",[this._v("base.js")]),this._v(" 的文件内容就不会变化，"),s("code",[this._v("Hash")]),this._v(" 值不会被更新，缓存就不会被更新。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("每次发布浏览器都会使用被缓存的 "),s("code",[this._v("base.js")]),this._v(" 文件，而不用去重新下载 "),s("code",[this._v("base.js")]),this._v(" 文件。 由于 "),s("code",[this._v("base.js")]),this._v(" 通常会很大，这对提升网页加速速度能起到很大的效果。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"如何通过-webpack-提取公共代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何通过-webpack-提取公共代码","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何通过 Webpack 提取公共代码")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Webpack 内置了专门用于提取多个 "),s("code",[this._v("Chunk")]),this._v(" 中公共部分的插件 "),s("code",[this._v("CommonsChunkPlugin")]),this._v("，\n"),s("code",[this._v("CommonsChunkPlugin")]),this._v(" 大致使用方法如下：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CommonsChunkPlugin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack/lib/optimize/CommonsChunkPlugin"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonsChunkPlugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从哪些 Chunk 中提取")]),t._v("\n  chunks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取出的公共部分形成一个新的 Chunk，这个新 Chunk 的名称")]),t._v("\n  name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"common"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("以上配置就能从网页 "),s("code",[this._v("A")]),this._v(" 和网页 "),s("code",[this._v("B")]),this._v(" 中抽离出公共部分，放到 "),s("code",[this._v("common")]),this._v(" 中。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("每个 "),n("code",[t._v("CommonsChunkPlugin")]),t._v(" 实例都会 "),n("strong",[t._v("生成一个新的 Chunk，这个新 Chunk 中包含了被提取出的代码")]),t._v("，在使用过程中必须指定 "),n("code",[t._v("name")]),t._v(" 属性，以告诉插件新生成的 Chunk 的名称。 其中 "),n("code",[t._v("chunks")]),t._v(" 属性指明从哪些已有的 Chunk 中提取，如果不填该属性，则"),n("strong",[t._v("默认会从所有已知的 Chunk")]),t._v("中提取。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("strong",[this._v("Chunk")]),this._v(" 是一系列文件的集合，一个 Chunk 中会 "),s("strong",[this._v("包含这个 Chunk 的入口文件和入口文件依赖的文件")]),this._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("通过以上配置输出的 common Chunk 中会包含所有页面都依赖的基础运行库 "),s("code",[this._v("react")]),this._v("、"),s("code",[this._v("react-dom")]),this._v("，为了把基础运行库从 common 中抽离到 "),s("code",[this._v("base")]),this._v(" 中去，还需要做一些处理。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("首先需要先配置一个 Chunk，这个 Chunk 中只依赖所有页面都依赖的基础库以及所有页面都使用的样式，为此需要在项目中写一个文件 "),s("code",[this._v("base.js")]),this._v(" 来描述 base Chunk 所依赖的模块，文件内容如下：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有页面都依赖的基础库")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react-dom"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有页面都使用的样式")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./base.css"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[this._v("接着再修改 Webpack 配置，在 "),s("code",[this._v("entry")]),this._v(" 中加入 "),s("code",[this._v("base")]),this._v("，相关修改如下：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./base.js"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("以上就完成了对新 "),s("code",[this._v("Chunk base")]),this._v(" 的配置。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"3"}},[s("li",[this._v("为了从 common 中提取出 "),s("code",[this._v("base")]),this._v(" 也包含的部分，还需要配置一个 "),s("code",[this._v("CommonsChunkPlugin")]),this._v("相关代码如下：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonsChunkPlugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从 common 和 base 两个现成的 Chunk 中提取公共的部分")]),t._v("\n  chunks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"common"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"base"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把公共的部分放到 base 中")]),t._v("\n  name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"base"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("由于 "),n("code",[t._v("common")]),t._v(" 和 "),n("code",[t._v("base")]),t._v(" 公共的部分就是 "),n("code",[t._v("base")]),t._v(" 目前已经包含的部分，所以这样配置后 "),n("code",[t._v("common")]),t._v(" 将会变小，而 "),n("code",[t._v("base")]),t._v(" 将保持不变。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("base.js")]),t._v("：所有网页都依赖的基础库组成的代码；")]),n("li",[n("code",[t._v("common.js")]),t._v("：网页 A、B 都需要的，但又不在 "),n("code",[t._v("base.js")]),t._v(" 文件中出现过的代码；")]),n("li",[n("code",[t._v("a.js")]),t._v("：网页 A 单独需要的代码；")]),n("li",[n("code",[t._v("b.js")]),t._v("：网页 B 单独需要的代码。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("base.js"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script"}}),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("common.js"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script"}}),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("a.js"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script"}}),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("针对 CSS 资源，以上理论和方法同样有效，也就是说你也可以对 "),s("code",[this._v("CSS")]),this._v(" 文件做同样的优化。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("以上方法可能会出现 "),s("code",[this._v("common.js")]),this._v("中没有代码的情况，原因是 "),s("strong",[this._v("去掉基础运行库外很难再找到所有页面都会用上的模块")]),this._v("。 在出现这种情况时，你可以采取以下做法之一：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("p",[t._v("CommonsChunkPlugin 提供一个选项 "),n("code",[t._v("minChunks")]),t._v("，表示文件要被提取出来时需要在指定的 Chunks 中最小"),n("strong",[t._v("出现最小次数")]),t._v("。 假如 "),n("code",[t._v("minChunks=2、chunks=['a','b','c','d']，")]),t._v("任何一个文件只要在 "),n("code",[t._v("['a','b','c','d']")]),t._v(" 中任意两个以上的 Chunk 中都出现过，这个文件就会被提取出来。 你可以根据自己的需求去调整 "),n("code",[t._v("minChunks")]),t._v(" 的值，"),n("code",[t._v("minChunks")]),t._v(" 越小越多的文件会被提取到 "),n("code",[t._v("common.js")]),t._v(" 中去，但这也会导致部分页面加载的不相关的资源越多； "),n("code",[t._v("minChunks")]),t._v(" 越大越少的文件会被提取到 "),n("code",[t._v("common.js")]),t._v(" 中去，但这会导致 "),n("code",[t._v("common.js")]),t._v(" 变小、效果变弱。")])]),n("li",[n("p",[t._v("根据各个页面之间的相关性选取其中的部分页面用 "),n("code",[t._v("CommonsChunkPlugin")]),t._v(" 去提取这部分被选出的页面的公共部分，而不是提取所有页面的公共部分，而且这样的操作可以叠加多次。 这样做的效果会很好，但缺点是配置复杂，你需要根据页面之间的关系去思考如何配置，该方法不通用。")])])])}],e=n(0),r=Object(e.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._m(1),n("p",[t._v("大型网站通常会由多个页面组成，每个页面都是一个独立的单页应用。 但由于所有页面都采用同样的技术栈，以及使用同一套样式代码，这导致这些页面之间有很多相同的代码。")]),n("p",[t._v("如果每个页面的代码都把这些公共的部分包含进去，会造成以下问题：")]),t._m(2),n("p",[t._v("如果把多个页面公共的代码抽离成单独的文件，就能优化以上问题。")]),n("p",[t._v("原因是假如用户访问了网站的其中一个网页，那么访问这个网站下的其它网页的概率将非常大。 在用户第一次访问后，这些页面公共代码的文件已经被浏览器缓存起来，在用户切换到其它页面时，存放公共代码的文件就不会再重新加载，而是直接从缓存中获取。 这样做后有如下好处：")]),t._m(3),t._m(4),n("p",[t._v("你已经知道了提取公共代码会有什么好处，但是在实战中具体要怎么做，以达到效果最优呢？ 通常你可以采用以下原则去为你的网站提取公共代码：")]),t._m(5),n("p",[t._v("文件之间的结构图如下：")]),t._m(6),t._m(7),n("p",[t._v("发布到线上的文件都会采用在"),n("router-link",{attrs:{to:"./optimize-9.html"}},[t._v("CDN 加速")]),t._v("中介绍过的方法，对静态文件的文件名都附加根据文件内容计算出 "),n("code",[t._v("Hash")]),t._v(" 值，也就是最终 "),n("code",[t._v("base.js")]),t._v(" 的文件名会变成 "),n("code",[t._v("base_3b1682ac.js")]),t._v("，以长期缓存文件。 网站通常会不断的更新发布，每次发布都会导致 "),n("code",[t._v("common.js")]),t._v(" 和各个网页的 JavaScript 文件都会因为 "),n("strong",[t._v("文件内容发生变化")]),t._v("而导致其 "),n("code",[t._v("Hash")]),t._v(" 值被更新，也就是 "),n("strong",[t._v("缓存被更新")]),t._v("。")],1),t._m(8),t._m(9),t._m(10),n("p",[t._v("你已经知道如何提取公共代码，接下来教你如何用 Webpack 实现。")]),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),t._m(22),t._m(23),t._m(24),n("p",[t._v("以上都配置好后重新执行构建，你将会得到四个文件，它们分别是：")]),t._m(25),n("p",[t._v("为了让网页正常运行，以网页 A 为例，你需要在其 HTML 中按照以下顺序引入以下文件才能让网页正常运行：")]),t._m(26),n("p",[t._v("以上就完成了提取公共代码需要的所有步骤。")]),t._m(27),t._m(28),t._m(29)])},a,!1,null,null,null);s.default=r.exports},37:function(t,s,n){t.exports=n.p+"assets/img/4-11extra-common.6be9c8eb.png"}}]);