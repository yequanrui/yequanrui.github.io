(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{107:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._m(1),n("p",[t._v("用过 UglifyJS 的你一定会发现在构建用于开发环境的代码时很快就能完成，但在构建用于线上的代码时构建一直卡在一个时间点迟迟没有反应，其实卡住的这个时候就是在进行代码压缩。")]),t._m(2),n("p",[t._v("为什么不把在"),n("router-link",{attrs:{to:"./optimize-3.html"}},[t._v("使用 HappyPack")]),t._v("中介绍过的多进程并行处理的思想也引入到代码压缩中呢？")],1),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"_4-4-使用-paralleluglifyplugin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-使用-paralleluglifyplugin","aria-hidden":"true"}},[this._v("#")]),this._v(" 4-4 使用 ParallelUglifyPlugin")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在使用 Webpack 构建出用于发布到线上的代码时，都会有压缩代码这一流程。 最常见的 JavaScript 代码压缩工具是 "),s("code",[this._v("UglifyJS")]),this._v("，并且 Webpack 也内置了它。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("由于压缩 JavaScript 代码需要 "),s("strong",[this._v("先把代码解析成用 Object 抽象表示的 AST 语法树")]),this._v("，再去应用各种规则分析和处理 "),s("code",[this._v("AST")]),this._v("，导致这个过程计算量巨大，耗时非常多。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("strong",[t._v("ParallelUglifyPlugin")]),t._v("就做了这个事情。 当 Webpack 有多个 JavaScript 文件需要输出和压缩时，原本会使用 "),n("code",[t._v("UglifyJS")]),t._v(" 去一个个挨着压缩再输出， 但是 "),n("code",[t._v("ParallelUglifyPlugin")]),t._v(" 则会 "),n("strong",[t._v("开启多个子进程")]),t._v("，把对多个文件的压缩工作分配给多个子进程去完成，每个子进程其实还是通过 UglifyJS 去压缩代码，但是变成了并行执行。 所以 ParallelUglifyPlugin 能更快的完成对多个文件的压缩工作。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用 "),s("code",[this._v("ParallelUglifyPlugin")]),this._v(" 也非常简单，把原来 Webpack 配置文件中内置的 "),s("code",[this._v("UglifyJsPlugin")]),this._v(" 去掉后，再替换成 "),s("code",[this._v("ParallelUglifyPlugin")]),this._v("，相关代码如下：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" DefinePlugin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack/lib/DefinePlugin"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ParallelUglifyPlugin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack-parallel-uglify-plugin"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plugins"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 ParallelUglifyPlugin 并行压缩输出的 JS 代码")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ParallelUglifyPlugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传递给 UglifyJS 的参数")]),t._v("\n      uglifyJS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最紧凑的输出")]),t._v("\n          beautify"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除所有的注释")]),t._v("\n          comments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        compress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在UglifyJs删除没有用到的代码时不输出警告")]),t._v("\n          warnings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除所有的 `console` 语句，可以兼容ie浏览器")]),t._v("\n          drop_console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内嵌定义了但是只用到一次的变量")]),t._v("\n          collapse_vars"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取出出现多次但是没有定义成变量去引用的静态值")]),t._v("\n          reduce_vars"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在通过 "),s("code",[this._v("new ParallelUglifyPlugin()")]),this._v(" 实例化时，支持以下参数：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("strong",[t._v("test")]),t._v("：使用正则去匹配哪些文件需要被 "),n("code",[t._v("ParallelUglifyPlugin")]),t._v(" 压缩，默认是 "),n("code",[t._v("/.js$/")]),t._v("，也就是默认压缩所有的 .js 文件。")]),n("li",[n("strong",[t._v("include")]),t._v("：使用正则去命中需要被 "),n("code",[t._v("ParallelUglifyPlugin")]),t._v(" 压缩的文件。默认为 "),n("code",[t._v("[]")]),t._v("。")]),n("li",[n("strong",[t._v("exclude")]),t._v("：使用正则去命中不需要被 "),n("code",[t._v("ParallelUglifyPlugin")]),t._v(" 压缩的文件。默认为 "),n("code",[t._v("[]")]),t._v("。")]),n("li",[n("strong",[t._v("cacheDir")]),t._v("：缓存压缩后的结果，下次遇到一样的输入时直接从缓存中获取压缩后的结果并返回。"),n("code",[t._v("cacheDir")]),t._v(" 用于配置缓存存放的目录路径。默认不会缓存，想开启缓存请设置一个目录路径。")]),n("li",[n("strong",[t._v("workerCount")]),t._v("：开启几个子进程去并发的执行压缩。默认是当前运行电脑的 CPU 核数减去 1。")]),n("li",[n("strong",[t._v("sourceMap")]),t._v("：是否输出 Source Map，这会导致压缩过程变慢。")]),n("li",[n("strong",[t._v("uglifyJS")]),t._v("：用于压缩 ES5 代码时的配置，Object 类型，直接透传给 "),n("code",[t._v("UglifyJS")]),t._v(" 的参数。")]),n("li",[n("strong",[t._v("uglifyES")]),t._v("：用于压缩 ES6 代码时的配置，Object 类型，直接透传给 "),n("code",[t._v("UglifyES")]),t._v(" 的参数。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("其中的 "),n("code",[t._v("test")]),t._v("、"),n("code",[t._v("include")]),t._v("、"),n("code",[t._v("exclude")]),t._v(" 与配置 "),n("code",[t._v("Loader")]),t._v(" 时的思想和用法一样。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("UglifyES 是 UglifyJS 的变种，专门用于压缩 ES6 代码，它们两都出自于同一个项目，并且它们两不能同时使用。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("UglifyES 一般用于给比较新的 JavaScript 运行环境压缩代码，例如用于 ReactNative 的代码运行在兼容性较好的 JavaScriptCore 引擎中，为了得到更好的性能和尺寸，采用 UglifyES 压缩效果会更好。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("ParallelUglifyPlugin")]),this._v(" 同时内置了 UglifyJS 和 UglifyES，也就是说 "),s("code",[this._v("ParallelUglifyPlugin")]),this._v(" 支持并行压缩 ES6 代码。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("接入 "),s("code",[this._v("ParallelUglifyPlugin")]),this._v(" 后，项目需要安装新的依赖：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("npm i -D webpack-parallel-uglify-plugin\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("安装成功后，重新执行构建你会发现速度变快了许多。如果设置 "),s("code",[this._v("cacheDir")]),this._v(" 开启了缓存，在之后的构建中会变的更快。")])}],!1,null,null,null);s.default=e.exports}}]);