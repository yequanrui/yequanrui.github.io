{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Subscription",
            "range": [
              9,
              21
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 21
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Subscription",
            "range": [
              9,
              21
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 21
              }
            }
          },
          "range": [
            9,
            21
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 21
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../Subscription",
        "raw": "'../Subscription'",
        "range": [
          29,
          46
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 29
          },
          "end": {
            "line": 1,
            "column": 46
          }
        }
      },
      "range": [
        0,
        47
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 47
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * interface Action extends Subscription {\n *   work: (state?: any) => void|Subscription;\n *   state?: any;\n *   delay?: number;\n *   schedule(state?: any, delay?: number): void;\n *   execute(): void;\n *   scheduler: Scheduler;\n *   error: any;\n * }\n * ```\n *\n * @interface\n * @name Action\n * @noimport true\n ",
          "range": [
            48,
            589
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 22,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ActionDoc",
          "range": [
            603,
            612
          ],
          "loc": {
            "start": {
              "line": 23,
              "column": 13
            },
            "end": {
              "line": 23,
              "column": 22
            }
          }
        },
        "superClass": {
          "type": "Identifier",
          "name": "Subscription",
          "range": [
            621,
            633
          ],
          "loc": {
            "start": {
              "line": 23,
              "column": 31
            },
            "end": {
              "line": 23,
              "column": 43
            }
          }
        },
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "constructor",
                "range": [
                  640,
                  651
                ],
                "loc": {
                  "start": {
                    "line": 24,
                    "column": 4
                  },
                  "end": {
                    "line": 24,
                    "column": 15
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "RestElement",
                    "argument": {
                      "type": "Identifier",
                      "name": "args",
                      "range": [
                        655,
                        659
                      ],
                      "loc": {
                        "start": {
                          "line": 24,
                          "column": 19
                        },
                        "end": {
                          "line": 24,
                          "column": 23
                        }
                      }
                    },
                    "range": [
                      652,
                      659
                    ],
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 16
                      },
                      "end": {
                        "line": 24,
                        "column": 23
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Super",
                          "range": [
                            671,
                            676
                          ],
                          "loc": {
                            "start": {
                              "line": 25,
                              "column": 8
                            },
                            "end": {
                              "line": 25,
                              "column": 13
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "SpreadElement",
                            "argument": {
                              "type": "Identifier",
                              "name": "args",
                              "range": [
                                680,
                                684
                              ],
                              "loc": {
                                "start": {
                                  "line": 25,
                                  "column": 17
                                },
                                "end": {
                                  "line": 25,
                                  "column": 21
                                }
                              }
                            },
                            "range": [
                              677,
                              684
                            ],
                            "loc": {
                              "start": {
                                "line": 25,
                                "column": 14
                              },
                              "end": {
                                "line": 25,
                                "column": 21
                              }
                            }
                          }
                        ],
                        "range": [
                          671,
                          685
                        ],
                        "loc": {
                          "start": {
                            "line": 25,
                            "column": 8
                          },
                          "end": {
                            "line": 25,
                            "column": 22
                          }
                        }
                      },
                      "range": [
                        671,
                        686
                      ],
                      "loc": {
                        "start": {
                          "line": 25,
                          "column": 8
                        },
                        "end": {
                          "line": 25,
                          "column": 23
                        }
                      },
                      "trailingComments": [
                        {
                          "type": "Block",
                          "value": "*\n         * The current state. This is the object that will be given to the `work`\n         * method.\n         * @type {any}\n         ",
                          "range": [
                            695,
                            834
                          ],
                          "loc": {
                            "start": {
                              "line": 26,
                              "column": 8
                            },
                            "end": {
                              "line": 30,
                              "column": 11
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              843,
                              847
                            ],
                            "loc": {
                              "start": {
                                "line": 31,
                                "column": 8
                              },
                              "end": {
                                "line": 31,
                                "column": 12
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "state",
                            "range": [
                              848,
                              853
                            ],
                            "loc": {
                              "start": {
                                "line": 31,
                                "column": 13
                              },
                              "end": {
                                "line": 31,
                                "column": 18
                              }
                            }
                          },
                          "range": [
                            843,
                            853
                          ],
                          "loc": {
                            "start": {
                              "line": 31,
                              "column": 8
                            },
                            "end": {
                              "line": 31,
                              "column": 18
                            }
                          }
                        },
                        "right": {
                          "type": "UnaryExpression",
                          "operator": "void",
                          "argument": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "range": [
                              861,
                              862
                            ],
                            "loc": {
                              "start": {
                                "line": 31,
                                "column": 26
                              },
                              "end": {
                                "line": 31,
                                "column": 27
                              }
                            }
                          },
                          "prefix": true,
                          "range": [
                            856,
                            862
                          ],
                          "loc": {
                            "start": {
                              "line": 31,
                              "column": 21
                            },
                            "end": {
                              "line": 31,
                              "column": 27
                            }
                          }
                        },
                        "range": [
                          843,
                          862
                        ],
                        "loc": {
                          "start": {
                            "line": 31,
                            "column": 8
                          },
                          "end": {
                            "line": 31,
                            "column": 27
                          }
                        }
                      },
                      "range": [
                        843,
                        863
                      ],
                      "loc": {
                        "start": {
                          "line": 31,
                          "column": 8
                        },
                        "end": {
                          "line": 31,
                          "column": 28
                        }
                      },
                      "leadingComments": [
                        {
                          "type": "Block",
                          "value": "*\n         * The current state. This is the object that will be given to the `work`\n         * method.\n         * @type {any}\n         ",
                          "range": [
                            695,
                            834
                          ],
                          "loc": {
                            "start": {
                              "line": 26,
                              "column": 8
                            },
                            "end": {
                              "line": 30,
                              "column": 11
                            }
                          }
                        }
                      ],
                      "trailingComments": [
                        {
                          "type": "Block",
                          "value": "*\n         * Represents the time (relative to the Scheduler's own clock) when this\n         * action should be executed.\n         * @type {number}\n         ",
                          "range": [
                            872,
                            1032
                          ],
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 8
                            },
                            "end": {
                              "line": 36,
                              "column": 11
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              1041,
                              1045
                            ],
                            "loc": {
                              "start": {
                                "line": 37,
                                "column": 8
                              },
                              "end": {
                                "line": 37,
                                "column": 12
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "delay",
                            "range": [
                              1046,
                              1051
                            ],
                            "loc": {
                              "start": {
                                "line": 37,
                                "column": 13
                              },
                              "end": {
                                "line": 37,
                                "column": 18
                              }
                            }
                          },
                          "range": [
                            1041,
                            1051
                          ],
                          "loc": {
                            "start": {
                              "line": 37,
                              "column": 8
                            },
                            "end": {
                              "line": 37,
                              "column": 18
                            }
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "range": [
                            1054,
                            1055
                          ],
                          "loc": {
                            "start": {
                              "line": 37,
                              "column": 21
                            },
                            "end": {
                              "line": 37,
                              "column": 22
                            }
                          }
                        },
                        "range": [
                          1041,
                          1055
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 8
                          },
                          "end": {
                            "line": 37,
                            "column": 22
                          }
                        }
                      },
                      "range": [
                        1041,
                        1056
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 8
                        },
                        "end": {
                          "line": 37,
                          "column": 23
                        }
                      },
                      "leadingComments": [
                        {
                          "type": "Block",
                          "value": "*\n         * Represents the time (relative to the Scheduler's own clock) when this\n         * action should be executed.\n         * @type {number}\n         ",
                          "range": [
                            872,
                            1032
                          ],
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 8
                            },
                            "end": {
                              "line": 36,
                              "column": 11
                            }
                          }
                        }
                      ],
                      "trailingComments": [
                        {
                          "type": "Block",
                          "value": "*\n         * The Scheduler which owns this action.\n         * @type {Scheduler}\n         ",
                          "range": [
                            1065,
                            1158
                          ],
                          "loc": {
                            "start": {
                              "line": 38,
                              "column": 8
                            },
                            "end": {
                              "line": 41,
                              "column": 11
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              1167,
                              1171
                            ],
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 8
                              },
                              "end": {
                                "line": 42,
                                "column": 12
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "scheduler",
                            "range": [
                              1172,
                              1181
                            ],
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 13
                              },
                              "end": {
                                "line": 42,
                                "column": 22
                              }
                            }
                          },
                          "range": [
                            1167,
                            1181
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 8
                            },
                            "end": {
                              "line": 42,
                              "column": 22
                            }
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "range": [
                            1184,
                            1188
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 25
                            },
                            "end": {
                              "line": 42,
                              "column": 29
                            }
                          }
                        },
                        "range": [
                          1167,
                          1188
                        ],
                        "loc": {
                          "start": {
                            "line": 42,
                            "column": 8
                          },
                          "end": {
                            "line": 42,
                            "column": 29
                          }
                        }
                      },
                      "range": [
                        1167,
                        1189
                      ],
                      "loc": {
                        "start": {
                          "line": 42,
                          "column": 8
                        },
                        "end": {
                          "line": 42,
                          "column": 30
                        }
                      },
                      "leadingComments": [
                        {
                          "type": "Block",
                          "value": "*\n         * The Scheduler which owns this action.\n         * @type {Scheduler}\n         ",
                          "range": [
                            1065,
                            1158
                          ],
                          "loc": {
                            "start": {
                              "line": 38,
                              "column": 8
                            },
                            "end": {
                              "line": 41,
                              "column": 11
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "range": [
                    661,
                    1195
                  ],
                  "loc": {
                    "start": {
                      "line": 24,
                      "column": 25
                    },
                    "end": {
                      "line": 43,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  651,
                  1195
                ],
                "loc": {
                  "start": {
                    "line": 24,
                    "column": 15
                  },
                  "end": {
                    "line": 43,
                    "column": 5
                  }
                }
              },
              "kind": "constructor",
              "computed": false,
              "range": [
                640,
                1195
              ],
              "loc": {
                "start": {
                  "line": 24,
                  "column": 4
                },
                "end": {
                  "line": 43,
                  "column": 5
                }
              },
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * The function that represents the raw work to be executed on a Scheduler.\n     * @param {any} [state] Some contextual data that the `work` function uses\n     * when called by the Scheduler.\n     * @return {?Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     ",
                  "range": [
                    1200,
                    1515
                  ],
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 4
                    },
                    "end": {
                      "line": 50,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "work",
                "range": [
                  1520,
                  1524
                ],
                "loc": {
                  "start": {
                    "line": 51,
                    "column": 4
                  },
                  "end": {
                    "line": 51,
                    "column": 8
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "state",
                    "range": [
                      1525,
                      1530
                    ],
                    "loc": {
                      "start": {
                        "line": 51,
                        "column": 9
                      },
                      "end": {
                        "line": 51,
                        "column": 14
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "UnaryExpression",
                        "operator": "void",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "range": [
                            1554,
                            1555
                          ],
                          "loc": {
                            "start": {
                              "line": 52,
                              "column": 20
                            },
                            "end": {
                              "line": 52,
                              "column": 21
                            }
                          }
                        },
                        "prefix": true,
                        "range": [
                          1549,
                          1555
                        ],
                        "loc": {
                          "start": {
                            "line": 52,
                            "column": 15
                          },
                          "end": {
                            "line": 52,
                            "column": 21
                          }
                        }
                      },
                      "range": [
                        1542,
                        1556
                      ],
                      "loc": {
                        "start": {
                          "line": 52,
                          "column": 8
                        },
                        "end": {
                          "line": 52,
                          "column": 22
                        }
                      }
                    }
                  ],
                  "range": [
                    1532,
                    1562
                  ],
                  "loc": {
                    "start": {
                      "line": 51,
                      "column": 16
                    },
                    "end": {
                      "line": 53,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1524,
                  1562
                ],
                "loc": {
                  "start": {
                    "line": 51,
                    "column": 8
                  },
                  "end": {
                    "line": 53,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1520,
                1562
              ],
              "loc": {
                "start": {
                  "line": 51,
                  "column": 4
                },
                "end": {
                  "line": 53,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * The function that represents the raw work to be executed on a Scheduler.\n     * @param {any} [state] Some contextual data that the `work` function uses\n     * when called by the Scheduler.\n     * @return {?Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     ",
                  "range": [
                    1200,
                    1515
                  ],
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 4
                    },
                    "end": {
                      "line": 50,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {any} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     ",
                  "range": [
                    1567,
                    2072
                  ],
                  "loc": {
                    "start": {
                      "line": 54,
                      "column": 4
                    },
                    "end": {
                      "line": 63,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "schedule",
                "range": [
                  2077,
                  2085
                ],
                "loc": {
                  "start": {
                    "line": 64,
                    "column": 4
                  },
                  "end": {
                    "line": 64,
                    "column": 12
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "state",
                    "range": [
                      2086,
                      2091
                    ],
                    "loc": {
                      "start": {
                        "line": 64,
                        "column": 13
                      },
                      "end": {
                        "line": 64,
                        "column": 18
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "delay",
                    "range": [
                      2093,
                      2098
                    ],
                    "loc": {
                      "start": {
                        "line": 64,
                        "column": 20
                      },
                      "end": {
                        "line": 64,
                        "column": 25
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "UnaryExpression",
                        "operator": "void",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "range": [
                            2122,
                            2123
                          ],
                          "loc": {
                            "start": {
                              "line": 65,
                              "column": 20
                            },
                            "end": {
                              "line": 65,
                              "column": 21
                            }
                          }
                        },
                        "prefix": true,
                        "range": [
                          2117,
                          2123
                        ],
                        "loc": {
                          "start": {
                            "line": 65,
                            "column": 15
                          },
                          "end": {
                            "line": 65,
                            "column": 21
                          }
                        }
                      },
                      "range": [
                        2110,
                        2124
                      ],
                      "loc": {
                        "start": {
                          "line": 65,
                          "column": 8
                        },
                        "end": {
                          "line": 65,
                          "column": 22
                        }
                      }
                    }
                  ],
                  "range": [
                    2100,
                    2130
                  ],
                  "loc": {
                    "start": {
                      "line": 64,
                      "column": 27
                    },
                    "end": {
                      "line": 66,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2085,
                  2130
                ],
                "loc": {
                  "start": {
                    "line": 64,
                    "column": 12
                  },
                  "end": {
                    "line": 66,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2077,
                2130
              ],
              "loc": {
                "start": {
                  "line": 64,
                  "column": 4
                },
                "end": {
                  "line": 66,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {any} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     ",
                  "range": [
                    1567,
                    2072
                  ],
                  "loc": {
                    "start": {
                      "line": 54,
                      "column": 4
                    },
                    "end": {
                      "line": 63,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     ",
                  "range": [
                    2135,
                    2235
                  ],
                  "loc": {
                    "start": {
                      "line": 67,
                      "column": 4
                    },
                    "end": {
                      "line": 70,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "execute",
                "range": [
                  2240,
                  2247
                ],
                "loc": {
                  "start": {
                    "line": 71,
                    "column": 4
                  },
                  "end": {
                    "line": 71,
                    "column": 11
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "UnaryExpression",
                        "operator": "void",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "range": [
                            2272,
                            2273
                          ],
                          "loc": {
                            "start": {
                              "line": 72,
                              "column": 20
                            },
                            "end": {
                              "line": 72,
                              "column": 21
                            }
                          }
                        },
                        "prefix": true,
                        "range": [
                          2267,
                          2273
                        ],
                        "loc": {
                          "start": {
                            "line": 72,
                            "column": 15
                          },
                          "end": {
                            "line": 72,
                            "column": 21
                          }
                        }
                      },
                      "range": [
                        2260,
                        2274
                      ],
                      "loc": {
                        "start": {
                          "line": 72,
                          "column": 8
                        },
                        "end": {
                          "line": 72,
                          "column": 22
                        }
                      }
                    }
                  ],
                  "range": [
                    2250,
                    2280
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 14
                    },
                    "end": {
                      "line": 73,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2247,
                  2280
                ],
                "loc": {
                  "start": {
                    "line": 71,
                    "column": 11
                  },
                  "end": {
                    "line": 73,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2240,
                2280
              ],
              "loc": {
                "start": {
                  "line": 71,
                  "column": 4
                },
                "end": {
                  "line": 73,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     ",
                  "range": [
                    2135,
                    2235
                  ],
                  "loc": {
                    "start": {
                      "line": 67,
                      "column": 4
                    },
                    "end": {
                      "line": 70,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            }
          ],
          "range": [
            634,
            2282
          ],
          "loc": {
            "start": {
              "line": 23,
              "column": 44
            },
            "end": {
              "line": 74,
              "column": 1
            }
          }
        },
        "range": [
          597,
          2282
        ],
        "loc": {
          "start": {
            "line": 23,
            "column": 7
          },
          "end": {
            "line": 74,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * interface Action extends Subscription {\n *   work: (state?: any) => void|Subscription;\n *   state?: any;\n *   delay?: number;\n *   schedule(state?: any, delay?: number): void;\n *   execute(): void;\n *   scheduler: Scheduler;\n *   error: any;\n * }\n * ```\n *\n * @interface\n * @name Action\n * @noimport true\n ",
            "range": [
              48,
              589
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 22,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=MiscJSDoc.js.map",
            "range": [
              2283,
              2320
            ],
            "loc": {
              "start": {
                "line": 75,
                "column": 0
              },
              "end": {
                "line": 75,
                "column": 37
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        590,
        2282
      ],
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * interface Action extends Subscription {\n *   work: (state?: any) => void|Subscription;\n *   state?: any;\n *   delay?: number;\n *   schedule(state?: any, delay?: number): void;\n *   execute(): void;\n *   scheduler: Scheduler;\n *   error: any;\n * }\n * ```\n *\n * @interface\n * @name Action\n * @noimport true\n ",
          "range": [
            48,
            589
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 22,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=MiscJSDoc.js.map",
          "range": [
            2283,
            2320
          ],
          "loc": {
            "start": {
              "line": 75,
              "column": 0
            },
            "end": {
              "line": 75,
              "column": 37
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    2282
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 74,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * interface Action extends Subscription {\n *   work: (state?: any) => void|Subscription;\n *   state?: any;\n *   delay?: number;\n *   schedule(state?: any, delay?: number): void;\n *   execute(): void;\n *   scheduler: Scheduler;\n *   error: any;\n * }\n * ```\n *\n * @interface\n * @name Action\n * @noimport true\n ",
      "range": [
        48,
        589
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n         * The current state. This is the object that will be given to the `work`\n         * method.\n         * @type {any}\n         ",
      "range": [
        695,
        834
      ],
      "loc": {
        "start": {
          "line": 26,
          "column": 8
        },
        "end": {
          "line": 30,
          "column": 11
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n         * Represents the time (relative to the Scheduler's own clock) when this\n         * action should be executed.\n         * @type {number}\n         ",
      "range": [
        872,
        1032
      ],
      "loc": {
        "start": {
          "line": 32,
          "column": 8
        },
        "end": {
          "line": 36,
          "column": 11
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n         * The Scheduler which owns this action.\n         * @type {Scheduler}\n         ",
      "range": [
        1065,
        1158
      ],
      "loc": {
        "start": {
          "line": 38,
          "column": 8
        },
        "end": {
          "line": 41,
          "column": 11
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * The function that represents the raw work to be executed on a Scheduler.\n     * @param {any} [state] Some contextual data that the `work` function uses\n     * when called by the Scheduler.\n     * @return {?Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     ",
      "range": [
        1200,
        1515
      ],
      "loc": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {any} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     ",
      "range": [
        1567,
        2072
      ],
      "loc": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     ",
      "range": [
        2135,
        2235
      ],
      "loc": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 70,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=MiscJSDoc.js.map",
      "range": [
        2283,
        2320
      ],
      "loc": {
        "start": {
          "line": 75,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 37
        }
      }
    }
  ]
}