(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{111:function(t,e,s){"use strict";s.r(e);var n=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"_4-15-输出分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-15-输出分析","aria-hidden":"true"}},[this._v("#")]),this._v(" 4-15 输出分析")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("最直接的分析方法就是去阅读 Webpack 输出的代码，但由于 "),e("strong",[this._v("Webpack 输出的代码可读性非常差而且文件非常大")]),this._v("，这会让你非常头疼。 为了更简单直观的分析输出结果，社区中出现了许多可视化的分析工具。这些工具以图形的方式把结果更加直观的展示出来，让你快速看到问题所在。 接下来教你如何使用这些工具。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("--profile")]),this._v("：记录下构建过程中的耗时信息；")]),e("li",[e("code",[this._v("--json")]),this._v("：以 JSON 的格式输出构建结果，最后只输出一个 "),e("code",[this._v(".json")]),this._v(" 文件，这个文件中包括所有构建相关的信息。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在启动 Webpack 时带上以上两个参数，启动命令如下 "),e("code",[this._v("webpack --profile --json > stats.json")]),this._v("，你会发现项目中多出了一个 "),e("code",[this._v("stats.json")]),this._v(" 文件。 这个 "),e("code",[this._v("stats.json")]),this._v("文件是给后面介绍的可视化分析工具使用的。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("blockquote",[s("p",[s("code",[t._v("webpack --profile --json")]),t._v(" 会输出字符串形式的 "),s("code",[t._v("JSON，> stats.json")]),t._v(" 是 UNIX/Linux 系统中的 "),s("strong",[t._v("管道命令")]),t._v(",含义是把 "),s("code",[t._v("webpack --profile --json")]),t._v(" 输出的内容通过管道输出到 "),s("code",[t._v("stats.json")]),t._v(" 文件中。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"官方的可视化分析工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#官方的可视化分析工具","aria-hidden":"true"}},[this._v("#")]),this._v(" 官方的可视化分析工具")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Webpack 官方提供了一个可视化分析工具 "),e("code",[this._v("Webpack Analyse")]),this._v("，它是一个在线 Web 应用。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("打开 Webpack Analyse 链接的网页后，你就会看到一个弹窗提示你上传 JSON 文件，也就是需要上传上面讲到的 "),e("code",[this._v("stats.json")]),this._v(" 文件，如图：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(38),alt:"图 4-15-1 Webpack Analyse 上传文件弹窗"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Webpack Analyse 不会把你选择的 "),e("code",[this._v("stats.json")]),this._v(" 文件发达到服务器，而是在浏览器本地解析，你不用担心自己的代码为此而泄露。 选择文件后，你马上就能如下的效果图：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(39),alt:"图 4-15-1 Webpack Analyse 主页"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("strong",[t._v("Modules")]),t._v("：展示所有的模块，每个模块对应一个文件。并且还包含所有模块之间的依赖关系图、模块路径、模块 ID、模块所属 Chunk、模块大小；")]),s("li",[s("strong",[t._v("Chunks")]),t._v("：展示所有的代码块，一个代码块中包含多个模块。并且还包含代码块的 ID、名称、大小、每个代码块包含的模块数量，以及代码块之间的依赖关系图；")]),s("li",[s("strong",[t._v("Assets")]),t._v("：展示所有输出的文件资源，包括 "),s("code",[t._v(".js")]),t._v("、"),s("code",[t._v(".css")]),t._v("、图片等。并且还包括文件名称、大小、该文件来自哪个代码块；")]),s("li",[s("strong",[t._v("Warnings")]),t._v("：展示构建过程中出现的所有警告信息；")]),s("li",[s("strong",[t._v("Errors")]),t._v("：展示构建过程中出现的所有错误信息；")]),s("li",[s("strong",[t._v("Hints")]),t._v("：展示处理每个模块的过程中的耗时。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("点击 "),e("strong",[this._v("Modules")]),this._v("，查看模块信息，效果图如下：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(40),alt:"图 4-15-1 Webpack Analyse Modules"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("点击 "),e("strong",[this._v("Chunks")]),this._v("，查看代码块信息，效果图如下：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(41),alt:"图 4-15-2 Webpack Analyse Chunks"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("由代码块之间的依赖关系图可以看出两个页面级的代码块 "),e("code",[this._v("login")]),this._v(" 和 "),e("code",[this._v("index")]),this._v(" 依赖提取出来的公共代码块 "),e("code",[this._v("common")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("点击 "),e("strong",[this._v("Assets")]),this._v("，查看输出的文件资源，效果图如下：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(42),alt:"图 4-15-3 Webpack Analyse Assets"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("点击 "),e("strong",[this._v("Hints")]),this._v("，查看输出过程中的耗时分布，效果图如下：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(43),alt:"图 4-15-3 Webpack Analyse Hints"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("从 Hints 可以看出每个文件在处理过程的开始时间和结束时间，从而可以找出是哪个文件导致构建缓慢。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"webpack-bundle-analyzer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack-bundle-analyzer","aria-hidden":"true"}},[this._v("#")]),this._v(" webpack-bundle-analyzer")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("webpack-bundle-analyzer")]),this._v(" 是另一个可视化分析工具， 它虽然没有官方那样有那么多功能，但比官方的要更加直观。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(44),alt:"图 4-15-4 Webpack Analyse Assets"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("打包出的文件中都包含了什么；")]),e("li",[this._v("每个文件的尺寸在总体中的占比，一眼看出哪些文件尺寸大；")]),e("li",[this._v("模块之间的包含关系；")]),e("li",[this._v("每个文件的 Gzip 后的大小。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("安装 "),e("code",[this._v("webpack-bundle-analyzer")]),this._v(" 到全局，执行命令 "),e("code",[this._v("npm i -g webpack-bundle-analyzer")]),this._v("；")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("按照上面提到的方法生成 "),e("code",[this._v("stats.json")]),this._v(" 文件；")]),e("li",[this._v("在项目根目录中执行 "),e("code",[this._v("webpack-bundle-analyzer")]),this._v(" 后，浏览器会打开对应网页看到以上效果。")])])}],i=s(0),a=Object(i.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),s("p",[t._v("前面虽然介绍了非常多的优化方法，但这些方法也无法涵盖所有的场景，为此你需要对输出结果做分析，以决定下一步的优化方向。")]),t._m(1),s("p",[t._v("在启动 Webpack 时，支持两个参数，分别是：")]),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),s("p",[t._v("它分为了六大板块，分别是：")]),t._m(11),s("p",[t._v("下面以在"),s("router-link",{attrs:{to:"./../practice/practice-10.html"}},[t._v("管理多个单页应用")]),t._v(" 中使用的项目为例，来分析其 "),s("code",[t._v("stats.json")]),t._v("文件。")],1),t._m(12),t._m(13),s("p",[t._v("由于依赖了大量第三方模块，文件数量大，导致模块之间的依赖关系图太密集而无法看清，但你可以进一步放大查看。")]),t._m(14),t._m(15),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),t._m(22),t._m(23),s("p",[t._v("先来看下它的效果图：")]),t._m(24),s("p",[t._v("它能方便的让你知道：")]),t._m(25),s("p",[t._v("接入 webpack-bundle-analyzer 的方法很简单，步骤如下：")]),t._m(26),t._m(27)])},n,!1,null,null,null);e.default=a.exports},38:function(t,e,s){t.exports=s.p+"assets/img/4-15webpack-analyse-dialog.e7d30563.png"},39:function(t,e,s){t.exports=s.p+"assets/img/4-15webpack-analyse-home.1a80dae0.png"},40:function(t,e,s){t.exports=s.p+"assets/img/4-15webpack-analyse-modules.7be9f768.png"},41:function(t,e,s){t.exports=s.p+"assets/img/4-15webpack-analyse-chunks.f366d9f8.png"},42:function(t,e,s){t.exports=s.p+"assets/img/4-15webpack-analyse-assets.0737993b.png"},43:function(t,e,s){t.exports=s.p+"assets/img/4-15webpack-analyse-hints.d416883f.png"},44:function(t,e,s){t.exports=s.p+"assets/img/4-15webpack-bundle-analyzer.5c51148c.png"}}]);