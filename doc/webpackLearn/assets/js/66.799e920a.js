(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{132:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"_2-7-其它配置项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-其它配置项","aria-hidden":"true"}},[t._v("#")]),t._v(" 2-7 其它配置项")]),s("p",[t._v("除了前面介绍到的配置项外，Webpack 还提供了一些零散的配置项。下面来介绍它们中常用的部分。")]),s("h2",{attrs:{id:"target"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#target","aria-hidden":"true"}},[t._v("#")]),t._v(" Target")]),s("p",[t._v("JavaScript 的应用场景越来越多，从浏览器到 Node.js，这些运行在不同环境的 JavaScript 代码存在一些差异。 target 配置项可以让 Webpack 构建出针对不同运行环境的代码。")]),s("p",[t._v("target 可以是以下之一：")]),s("table",[s("thead",[s("tr",[s("th",[t._v("target 值")]),s("th",[t._v("描述")])])]),s("tbody",[s("tr",[s("td",[s("code",[t._v("web")])]),s("td",[t._v("针对浏览器 (默认)，所有代码都集中在一个文件里")])]),s("tr",[s("td",[s("code",[t._v("node")])]),s("td",[t._v("针对 Node.js，使用 require 语句加载 Chunk 代码")])]),s("tr",[s("td",[s("code",[t._v("async-node")])]),s("td",[t._v("针对 Node.js，异步加载 Chunk 代码")])]),s("tr",[s("td",[s("code",[t._v("webworker")])]),s("td",[t._v("针对 "),s("code",[t._v("WebWorker")])])]),s("tr",[s("td",[s("code",[t._v("electron-main")])]),s("td",[t._v("针对 Electron 主线程")])]),s("tr",[s("td",[s("code",[t._v("electron-renderer")])]),s("td",[t._v("针对 Electron 渲染线程")])])])]),s("p",[t._v("例如当你设置 "),s("code",[t._v("target:'node'")]),t._v(" 时，源代码中导入 Node.js 原生模块的语句 "),s("code",[t._v("require('fs')")]),t._v(" 将会被保留，fs 模块的内容不会打包进 "),s("code",[t._v("Chunk")]),t._v(" 里。")]),s("h2",{attrs:{id:"devtool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#devtool","aria-hidden":"true"}},[t._v("#")]),t._v(" Devtool")]),s("p",[t._v("devtool 配置 Webpack 如何生成 Source Map，默认值是 "),s("code",[t._v("false")]),t._v(" 即不生成 Source Map，想为构建出的代码生成 Source Map 以方便调试，可以这样配置：")]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("export "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  devtool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source-map"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"watch-和-watchoptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#watch-和-watchoptions","aria-hidden":"true"}},[t._v("#")]),t._v(" Watch 和 WatchOptions")]),s("p",[t._v("前面介绍过 Webpack 的监听模式，它支持监听文件更新，在文件发生变化时重新编译。")]),s("p",[t._v("在使用 Webpack 时监听模式默认是关闭的，想打开需要如下配置：")]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("export "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  watch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在使用 DevServer 时，"),s("strong",[t._v("监听模式默认是开启")]),t._v("的。")]),s("p",[t._v("除此之外，Webpack 还提供了 "),s("code",[t._v("watchOptions")]),t._v(" 配置项去更灵活的控制监听模式，使用如下：")]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("export "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有在开启监听模式时，watchOptions 才有意义")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为 false，也就是不开启")]),t._v("\n  watch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听模式运行时的参数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在开启监听模式时，才有意义")]),t._v("\n  watchOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不监听的文件或文件夹，支持正则匹配")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为空")]),t._v("\n    ignored"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/node_modules/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听到变化发生后会等 300ms 再去执行动作，防止文件更新太快导致重新编译频率太高")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为 300ms")]),t._v("\n    aggregateTimeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断文件是否发生变化是通过不停的去询问系统指定文件有没有变化实现的")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认每秒问 1000 次")]),t._v("\n    poll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"externals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#externals","aria-hidden":"true"}},[t._v("#")]),t._v(" Externals")]),s("p",[s("code",[t._v("Externals")]),t._v(" 用来告诉 Webpack 要构建的代码中使用了哪些不用被打包的模块，也就是说这些模版是外部环境提供的，Webpack 在打包时可以忽略它们。")]),s("p",[t._v("有些 JavaScript 运行环境可能内置了一些全局变量或者模块，例如在你的 HTML HEAD 标签里通过以下代码：")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("path/to/jquery.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("引入 "),s("code",[t._v("jQuery")]),t._v(" 后，全局变量 "),s("code",[t._v("jQuery")]),t._v(" 就会被注入到网页的 JavaScript 运行环境里。")]),s("p",[t._v("如果想在使用模块化的源代码里导入和使用 jQuery，可能需要这样：")]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" $ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jquery"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".my-element"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("构建后你会发现输出的 Chunk 里包含的 jQuery 库的内容，这导致 jQuery 库出现了 2 次，浪费加载流量，最好是 "),s("code",[t._v("Chunk")]),t._v("里不会包含 jQuery 库的内容。")]),s("p",[s("strong",[t._v("Externals 配置项就是为了解决这个问题")]),t._v("。")]),s("p",[t._v("通过 "),s("code",[t._v("externals")]),t._v(" 可以告诉 Webpack JavaScript 运行环境已经内置了那些全局变量，针对这些全局变量不用打包进代码中而是直接使用全局变量。 要解决以上问题，可以这样配置 "),s("code",[t._v("externals")]),t._v("：")]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("export "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  externals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把导入语句里的 jquery 替换成运行环境里的全局变量 jQuery")]),t._v("\n    jquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jQuery"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"resolveloader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resolveloader","aria-hidden":"true"}},[t._v("#")]),t._v(" ResolveLoader")]),s("p",[s("code",[t._v("ResolveLoader")]),t._v(" 用来告诉 Webpack "),s("strong",[t._v("如何去寻找 Loader")]),t._v("，因为在使用 Loader 时是通过其包名称去引用的， Webpack 需要根据配置的 Loader 包名去找到 Loader 的实际代码，以调用 Loader 去处理源文件。")]),s("p",[s("code",[t._v("ResolveLoader")]),t._v(" 的默认配置如下：")]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  resolveLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去哪个目录下寻找 Loader")]),t._v("\n    modules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 入口文件的后缀")]),t._v("\n    extensions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".json"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指明入口文件位置的字段")]),t._v("\n    mainFields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"loader"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("该配置项常用于加载本地的 Loader。")])])])}],!1,null,null,null);a.default=e.exports}}]);